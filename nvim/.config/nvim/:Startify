"        _
" __   _(_)_ __ ___  _ __ ___
" \ \ / / | '_ ` _ \| '__/ __|
"  \ V /| | | | | | | | | (__
"   \_/ |_|_| |_| |_|_|  \___|

" Leader key:
let mapleader = " "
    
" -------------
" Some basics:
" -------------
set noerrorbells
set nocompatible
filetype plugin indent on
syntax on
set encoding=utf-8
set nu
set textwidth=80
set wrap
set relativenumber
set ruler
set matchpairs+=<:>,{:},(:),[:]
set ignorecase
set smartcase
set incsearch

set tabstop=4 softtabstop=4
set shiftwidth=4
set expandtab
set smartindent
set autoindent
set cursorline

set scrolloff=3
set showcmd
set showmatch

set splitbelow splitright

" set termguicolors

set colorcolumn=80
highlight ColorColumn ctermbg=Yellow guibg=Yellow

" ------------
" Vim Plugins
" ------------
call plug#begin()
    Plug 'morhetz/gruvbox'
    Plug 'jremmen/vim-ripgrep'
    Plug 'tpope/vim-fugitive'
    Plug 'leafgarland/typescript-vim'
    Plug 'vim-utils/vim-man'
    Plug 'ctrlpvim/ctrlp.vim'
    Plug 'ycm-core/YouCompleteMe'
    Plug 'mbbill/undotree'
    Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
"{{ Productivity }}
    Plug 'vimwiki/vimwiki'
"{{ File Management }}
    Plug 'vifm/vifm.vim'
    Plug 'preservim/nerdtree'
    Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
    Plug 'ryanoasis/vim-devicons'
    Plug 'mhinz/vim-startify'
call plug#end()

colorscheme gruvbox
set background=dark

if executable('rg')
    let g:rg_derive_root='true'
endif

let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
let g:ctrlp_use_caching = 0

" ----------------------------------------------
" Move selected text blocks around with J and K
" ----------------------------------------------
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

noremap <silent> <C-Left> :vertical resize +3<CR>
noremap <silent> <C-Right> :vertical resize -3<CR>
noremap <silent> <C-Up> :resize +3<CR>
noremap <silent> <C-Down> :resize -3<CR>

" Change 2 split windows from vert to horiz or horiz to vert
map <Leader>th <C-w>t<C-w>H
map <Leader>tk <C-w>t<C-w>K

" Vifm
map <Leader>vv :Vifm<CR>
map <Leader>vs :VsplitVifm<CR>
map <Leader>sp :SplitVifm<CR>
map <Leader>dv :DiffVifm<CR>
map <Leader>tv :TabVifm<CR>

" Startify
let g:startify_lists = [
          \ { 'type': 'sessions',  'header': ['   Sessions']       },
          \ { 'type': 'files',     'header': ['   Files']            },
          \ { 'type': 'dir',       'header': ['   Current Directory '. getcwd()] },
          \ { 'type': 'bookmarks', 'header': ['   Bookmarks']      },
          \ ]

let g:startify_custom_header = [
        \ '    ____            _           _     ____  _             _   ',
        \ '   |  _ \ _ __ ___ (_) ___  ___| |_  / ___|| |_ __ _ _ __| |_ ',
        \ '   | |_) | `__/ _ \| |/ _ \/ __| __| \___ \| __/ _` | `__| __|',
        \ '   |  __/| | | (_) | |  __/ (__| |_   ___) | || (_| | |  | |_ ',
        \ '   |_|   |_|  \___// |\___|\___|\__| |____/ \__\__,_|_|   \__|',
        \ '                 |___/                                         ',
        \]

let g:startify_bookmarks = [
            \ { 'i': '~/.i3/config' },
            \ { 'n': '~/.config/nvim/init.vim' },
            \ ]

nnoremap <leader>tt :5new term://bash<CR>
nnoremap <silent> <leader>s :Startify<CR>
tnoremap <F12> <C-\><C-n>

nnoremap <leader>h :wincmd h<CR>
nnoremap <leader>j :wincmd j<CR>
nnoremap <leader>k :wincmd k<CR>
nnoremap <leader>l :wincmd l<CR>
nnoremap <leader>u :UndotreeToggle<CR> :NERDTreeClose<CR> :wincmd h<CR> :vertical resize 30<CR>
nnoremap <leader>n :NERDTreeToggle<CR>
nnoremap <leader>ps :Rg<SPACE>

" You Complete Me
nnoremap <silent> <leader>gd :YcmCompleter GoTo<CR>
nnoremap <silent> <leader>gr :YcmCompleter GoToReferences<CR>
nnoremap <silent> <leader>rr :YcmCompleter RefactorRename<SPACE>
nnoremap <silent> <leader>gf :YcmCompleter FixIt<CR>

let g:UltiSnipsExpandTrigger="<F10>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"

let NERDTreeHijackNetrw = 0

" --------------------------------------------------
" Add git status information to the vim status line
" --------------------------------------------------
set statusline=%<%f\ %h%m%r%{FugitiveStatusline()}%=%-14.(%l,%c%V%)\ %P

autocmd BufWinLeave *.* mkview
autocmd BufWinEnter *.* silent loadview


